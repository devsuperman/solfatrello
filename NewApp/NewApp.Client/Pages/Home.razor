@page "/"

<PageTitle>Início</PageTitle>

<form class="d-flex">

    <h1 class="flex-grow-1">
        Resumo de
    </h1>

    <div>
        <InputDate Type="InputDateType.Month" class="form-control" @bind-Value="MesAno" @bind-Value:after="CarregarGastos" />
    </div>

</form>

<hr>

    <ul class="list-group">
        @foreach (var item in Model)
        {
            <li class="list-group-item d-flex justify-content-between">
                <span>
                    @item.Item1
                </span>
                <span>
                    R$ @item.Item2.ToString("N2")
                </span>
            </li>
        }

        <li class="list-group-item list-group-item-success d-flex justify-content-between">
            <span>
                Total
            </span>
            <span>
                R$ @Model.Sum(s => s.Item2).ToString("N2")
            </span>
        </li>

    </ul>

    <div class='d-flex justify-content-end mt-4'>
        <a href="/gastos/form" class='btn btn-primary'>
            <i class="bi bi-coin"></i>
            Añadir Gasto
        </a>
    </div>

@code {
    public List<Tuple<string, decimal>> Model { get; set; } = new();
    public DateTime MesAno { get; set; } = DateTime.Today;
    @inject AuthenticationStateProvider _auth;

    protected override async Task OnInitializedAsync()
    {
        await CarregarGastos();
    }

    public async Task CarregarGastos()
    {
        var state = await _auth.GetAuthenticationStateAsync();

        if (state.User.Identity.IsAuthenticated)
            Model = await _gastosRepository.ListarPorHermano(MesAno);
    }


}