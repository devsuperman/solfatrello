@page "/gastos/form/{Id:int?}"
@attribute [Authorize]

<PageTitle>
    @Titulo
</PageTitle>

<h1>
    <i class="bi bi bi-coin"></i>
    @Titulo
</h1>

<hr />

<EditForm method="post" Model="Model" OnValidSubmit="Save" FormName="form" Enhance>

    <DataAnnotationsValidator />

    <input type="hidden" name="Gasto.Id" value="@Id" />

    <div class="mb-3">
        <label for="Fecha" class="form-label">Fecha</label>
        <InputDate id="Fecha" @bind-Value="Model.Fecha" class="form-control" />
        <ValidationMessage For="() => Model.Fecha" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="CategoriaId" class="form-label">Categoria</label>        
        <InputSelect class="form-select" @bind-Value="Model.CategoriaId">
            <option value=''>Selecione</option>
            
            @foreach (var cat in Categorias)
            {
                <option value='@cat.Id'>@cat.Nombre</option>
            }

        </InputSelect>
        <ValidationMessage For="() => Model.CategoriaId" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="Nombre" class="form-label">Nombre</label>
        <InputText id="Nombre" @bind-Value="Model.Nombre" class="form-control" />
        <ValidationMessage For="() => Model.Nombre" class="text-danger" />
    </div>

    <div class="mb-3">
        <label for="Valor" class="form-label">Valor</label>
        <InputNumber class="form-control" @bind-Value="Model.Valor"/>
        <ValidationMessage For="() => Model.Valor" class="text-danger" />
    </div>

    <div class="d-flex justify-content-end">

        <a href="/gastos" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i>
            Voltar
        </a>

        <button type="submit" class="btn btn-primary ms-2">
            <i class="bi bi-check-circle"></i>
            Salvar Gasto
        </button>
    </div>

</EditForm>


@code {

    public string Titulo => Id != 0 ? "Editar Gasto" : "Criar Gasto";

    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm]
    public Tarea Model { get; set; } = new();

    public List<Hermano> Categorias { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Categorias = await _categoriasRepository.GetAll();

        if (Id > 0)
            Model = await _gastosRepository.Get(Id);
    }

    public async Task Save()
    {
        await _gastosRepository.Upsert(Model);
        _navigation.NavigateTo("/gastos");
    }
}
